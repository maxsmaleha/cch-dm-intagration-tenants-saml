@using Newtonsoft.Json
@model List<WebApplication3.Models.EcommerceProjectModel>
@{
    ViewBag.Title = "Projects";
}

<style>
    img.project-preview {
        border: 1px solid black;
    }
</style>
<h2>Projects</h2>
<div>
    @foreach (var item in Model)
    {
        <hr />
        <div>
            <img id="preview-@item.Project.Id" class="project-preview" style="max-width: 200px; max-height: 200px;" />
            <script>
                (async () => {
                    const response = await fetch('/projects/GetPreviewUrl?projectId=' + @item.Project.Id);
                    const data = await response.text();
                    document.querySelector("img#preview-@item.Project.Id").src = data;
                })()
            </script>
            <div>Status: @item.Project.Status.DisplayName</div>
            <div>CreationTime: @item.Project.CreationTime</div>
            <div>
                @{
                    var product = item.Project.Products.First();
                    var hiddenDict = JsonConvert.DeserializeObject<Dictionary<string, object>>(product.Hidden.ToString());
                    if (hiddenDict.ContainsKey("PdfUrl"))
                    {
                        var url = hiddenDict["PdfUrl"];
                        <div>
                            <button onClick="download('@item.Project.Id')">Download</button>
                        </div>
                    }
                    if (hiddenDict.ContainsKey("Snapshot"))
                    {
                        var snapshot = hiddenDict["Snapshot"];
                        var key = product.Key;
                        var editUrl = $"/Ecommerce/Product/{item.EcommerceProduct.Id}?key={item.Project.Id}&snapshot={snapshot}";
                        <div>
                            <a href="@editUrl" target="_blank">Edit</a>
                        </div>
                    }
                }
            </div>
        </div>
    }
</div>
<script>
    async function download(projectId) {
        const response = await fetch('/projects/GetPdfUrl?projectId=' + projectId);
        const data = await response.text();
        downloadFile(data, "file.pdf");
    }

    function downloadFile(url, fileName) {
        const link = document.createElement('a');
        link.style.position = 'absolute';
        link.style.top = '-99999999';
        link.style.left = '-9999999';
        link.style.visibility = 'hidden';
        link.target = '_blank';
        link.download = fileName;
        link.href = url + "?t=" + Date.now();
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
</script>